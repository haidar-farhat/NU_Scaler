name: Test Server Deployment

on:
  push:
    branches:
      - testing  # Adjust this branch name as needed

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Test Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.TEST_SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          script: |
            cd /var/www/NU_Scaler
            
            # Stop nginx
            sudo systemctl stop nginx
            
            # Stop Docker containers
            docker-compose down
            
            # Handle local changes before pulling
            # Option 1: Reset local changes (discards all local changes)
            git reset --hard
            
            # Option 2: Alternatively, stash changes if you want to keep them
            # git stash
            
            # Pull latest code
            git pull origin testing
            
            # Generate an APP_KEY securely
            APP_KEY_VALUE="base64:$(openssl rand -base64 32)"
            
            # Create basic .env file with proper variable expansion
            cat > @web/server/laravel_app/.env << EOL
            APP_NAME=NuScaler
            APP_ENV=testing
            APP_DEBUG=true
            APP_URL=${{ secrets.TEST_APP_URL }}
            APP_KEY=${APP_KEY_VALUE}
            
            LOG_CHANNEL=stack
            LOG_LEVEL=debug
            
            DB_CONNECTION=mysql
            DB_HOST=db
            DB_PORT=3306
            DB_DATABASE=${{ secrets.TEST_DB_DATABASE }}
            DB_USERNAME=${{ secrets.TEST_DB_USERNAME }}
            DB_PASSWORD=${{ secrets.TEST_DB_PASSWORD }}
            
            BROADCAST_DRIVER=log
            CACHE_DRIVER=file
            FILESYSTEM_DISK=local
            QUEUE_CONNECTION=sync
            SESSION_DRIVER=file
            SESSION_LIFETIME=120
            
            # Additional env vars
            ${{ secrets.TEST_ADDITIONAL_ENV_VARS }}
            EOL
            
            # Create empty Vite manifest for tests
            mkdir -p @web/server/laravel_app/public/build
            echo '{}' > @web/server/laravel_app/public/build/manifest.json
            
            # Start Docker containers
            docker-compose up -d
            
            # Get the Laravel container name
            CONTAINER_NAME=$(docker-compose ps -q backend)
            
            # Copy .env into the container
            docker cp @web/server/laravel_app/.env nu_scaler-backend-1:/var/www/html/.env 2>/dev/null || docker cp @web/server/laravel_app/.env ${CONTAINER_NAME}:/var/www/html/.env || docker cp @web/server/laravel_app/.env nu_scaler_backend_1:/var/www/html/.env
            
            # Reload configuration
            docker exec -i nu_scaler-backend-1 php artisan config:clear 2>/dev/null || docker exec -i ${CONTAINER_NAME} php artisan config:clear || docker exec -i nu_scaler_backend_1 php artisan config:clear
            
            # Run migrations
            docker exec -i nu_scaler-backend-1 php artisan migrate --force 2>/dev/null || docker exec -i ${CONTAINER_NAME} php artisan migrate --force || docker exec -i nu_scaler_backend_1 php artisan migrate --force
            
            # Clear Laravel caches
            docker exec -i nu_scaler-backend-1 php artisan cache:clear 2>/dev/null || docker exec -i ${CONTAINER_NAME} php artisan cache:clear || docker exec -i nu_scaler_backend_1 php artisan cache:clear
            docker exec -i nu_scaler-backend-1 php artisan route:clear 2>/dev/null || docker exec -i ${CONTAINER_NAME} php artisan route:clear || docker exec -i nu_scaler_backend_1 php artisan route:clear
            docker exec -i nu_scaler-backend-1 php artisan view:clear 2>/dev/null || docker exec -i ${CONTAINER_NAME} php artisan view:clear || docker exec -i nu_scaler_backend_1 php artisan view:clear
            
            # Restart nginx
            sudo systemctl start nginx
            
            echo "Test deployment completed with APP_KEY: ${APP_KEY_VALUE}" 
name: Production Server Deployment

on:
  push:
    branches:
      - main  # Adjust this branch name as needed

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Production Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PROD_SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          script: |
            cd /var/www/NU_Scaler
            
            # Stop nginx
            sudo systemctl stop nginx
            
            # Stop Docker containers
            docker-compose down
            
            # Handle local changes before pulling
            # Option 1: Reset local changes (discards all local changes)
            git reset --hard
            
            # Option 2: Alternatively, stash changes if you want to keep them
            # git stash
            
            # Pull latest code
            git pull origin main
            
            # Backup existing .env file if exists
            if [ -f @web/server/laravel_app/.env ]; then
              cp @web/server/laravel_app/.env @web/server/laravel_app/.env.backup
            fi
            
            # Create .env file
            cat > @web/server/laravel_app/.env << 'EOL'
            APP_NAME=NuScaler
            APP_ENV=production
            APP_DEBUG=false
            APP_URL=${{ secrets.PROD_APP_URL }}
            
            LOG_CHANNEL=stack
            LOG_LEVEL=warning
            
            DB_CONNECTION=mysql
            DB_HOST=db
            DB_PORT=3306
            DB_DATABASE=${{ secrets.PROD_DB_DATABASE }}
            DB_USERNAME=${{ secrets.PROD_DB_USERNAME }}
            DB_PASSWORD=${{ secrets.PROD_DB_PASSWORD }}
            
            BROADCAST_DRIVER=log
            CACHE_DRIVER=file
            FILESYSTEM_DISK=local
            QUEUE_CONNECTION=sync
            SESSION_DRIVER=file
            SESSION_LIFETIME=120
            
            # Add any other environment variables here
            ${{ secrets.PROD_ADDITIONAL_ENV_VARS }}
            EOL
            
            # Create empty Vite manifest for tests and production
            mkdir -p @web/server/laravel_app/public/build
            echo '{}' > @web/server/laravel_app/public/build/manifest.json
            
            # Start Docker containers
            docker-compose up -d
            
            # Handle app key - keep existing one if available
            if [ -f @web/server/laravel_app/.env.backup ]; then
              # Extract APP_KEY from backup
              APP_KEY=$(grep APP_KEY= @web/server/laravel_app/.env.backup | cut -d '=' -f2)
              
              if [ ! -z "$APP_KEY" ]; then
                # Use existing key with proper delimiter for sed
                sed -i "s|APP_KEY=|APP_KEY=$APP_KEY|" @web/server/laravel_app/.env
                echo "Using existing application key: $APP_KEY"
              else
                # Generate new key
                APP_KEY=$(docker exec -i nu_scaler-backend-1 php artisan key:generate --show)
                if [ ! -z "$APP_KEY" ]; then
                  sed -i "s|APP_KEY=|APP_KEY=$APP_KEY|" @web/server/laravel_app/.env
                  echo "Generated new application key: $APP_KEY"
                fi
              fi
            else
              # No backup, generate new key
              APP_KEY=$(docker exec -i nu_scaler-backend-1 php artisan key:generate --show)
              if [ ! -z "$APP_KEY" ]; then
                sed -i "s|APP_KEY=|APP_KEY=$APP_KEY|" @web/server/laravel_app/.env
                echo "Generated new application key: $APP_KEY"
              fi
            fi
            
            # Copy updated .env into the container
            docker cp @web/server/laravel_app/.env nu_scaler-backend-1:/var/www/html/.env
            
            # Run migrations
            docker exec -i nu_scaler-backend-1 php artisan migrate --force
            
            # Optimize Laravel for production
            docker exec -i nu_scaler-backend-1 php artisan config:cache
            docker exec -i nu_scaler-backend-1 php artisan route:cache
            docker exec -i nu_scaler-backend-1 php artisan view:cache
            
            # Restart nginx
            sudo systemctl start nginx
            
            echo "Production deployment completed" 

